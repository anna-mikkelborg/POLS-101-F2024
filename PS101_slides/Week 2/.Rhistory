tidyr,
broom,
modelsummary,
tribble,
kableExtra,
csvy,
lme4,
jtools,
ggstance,
scales,
dotwhisker,
ggpubr)
# setup for Black MCs by district type ----
congress <-
read.csv(
"/Users/annamikkelborg/Documents/GitHub/legislator-diversity/CD POC legislators over time/MCs/congress_black_pctwhite_presvote.csv"
) %>%
filter(!is.na(year)) %>%
rowwise() %>%
mutate(major_party_vote = sum(dem_vote_share, rep_vote_share),
dem_vote_share2 = dem_vote_share / major_party_vote) %>%
ungroup() %>%
group_by(year) %>%
mutate(dem_vote_share2_byyear = mean(dem_vote_share2, na.rm = T)) %>%
ungroup() %>%
rowwise() %>%
mutate(presvote_normalized = dem_vote_share2 - dem_vote_share2_byyear) %>%
ungroup() %>%
distinct() %>%
mutate(type = case_when(pct_white > 0.5 ~ "Majority-white districts",
pct_black > 0.5 ~ "Majority-Black districts",
T~"Other majority-minority districts"),
type = factor(type, levels=c("Majority-Black districts", "Other majority-minority districts", "Majority-white districts"), ordered=T),
yearnum = (year - 2008)/2)
congress_plot <- congress %>%
group_by(year, type, black, party) %>%
mutate(pct_white_blackmc = case_when(black==1~round(pct_white * 100, 0), T~NA_real_),
pct_dem_blackmc = case_when(black==1~round(dem_vote_share * 100, 0), T~NA_real_)) %>%
ungroup() %>%
group_by(year, type, party) %>%
summarise(black = sum(black, na.rm = T),
total = n(),
label = paste(black, "/", total, sep = ""),
pct_white_blackmc = mean(pct_white_blackmc, na.rm = T),
pct_dem_blackmc = mean(pct_dem_blackmc, na.rm = T)) %>%
filter(black > 0) %>%
mutate(party = factor(party, levels = c("republican", "democrat"), ordered=T))
# setup for meta-analysis ----
all_conjoints <- read_csvy("/Users/annamikkelborg/Documents/GitHub/candidate-choice-meta-analysis/Datasets/all_conjoints.csv", stringsAsFactors = T) %>%
filter(poc=="black"&paste(resprace, respparty) %in% c("White Democrat", "Black Democrat", "White Republican")) # subset to 3 groups and choices between white and Black candidates
all_conjoints$pub <- as.character(all_conjoints$pub)
all_conjoints$platform <- as.character(all_conjoints$platform)
figdat <- all_conjoints %>%
filter(race=="black") %>%
mutate(yearnum = (year - 1989),
yearnum2 = (year - 2012),
post18 = as.numeric(year >= 2018),
period = case_when(year < 2012 ~ "Pre-2012",
year < 2018 ~ "2012-2017",
year < 2024 ~ "2018-2023"),
period = factor(period, levels = c("Pre-2012", "2012-2017", "2018-2023"), ordered = T))
fit_whitedems <- lmer(chosen_candidate ~ year + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="White Democrat",])
dat_whitedems <- make_predictions(fit_whitedems, pred = "year") %>% mutate(group = "White Democrats")
fit_whitereps <- lmer(chosen_candidate ~ year + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="White Republican",])
dat_whitereps <- make_predictions(fit_whitereps, pred = "year") %>% mutate(group = "White Republicans")
fit_blackdems <- lmer(chosen_candidate ~ year + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="Black Democrat",])
dat_blackdems <- make_predictions(fit_blackdems, pred = "year") %>% mutate(group = "Black Democrats")
by_project_out2 <- read.csv("/Users/annamikkelborg/Documents/GitHub/candidate-choice-meta-analysis/Datasets/MMs_wvb_respracerespparty_main3_weighted.csv") %>%
mutate(group = case_when(type=="White Democratic respondents"~"White Democrats",
type=="White Republican respondents"~"White Republicans",
type=="Black Democratic respondents"~"Black Democrats")) %>%
select(-X)
res <- bind_rows(dat_whitedems, dat_whitereps, dat_blackdems) %>%
select(-pub) %>%
distinct() %>%
full_join(by_project_out2)
# z-tests
beta_whitedems <- summary(lme4::lmer(chosen_candidate ~ yearnum + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="White Democrat",]))$coefficients[2,1]
se_whitedems <- summary(lme4::lmer(chosen_candidate ~ yearnum + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="White Democrat",]))$coefficients[2,2]
beta_blackdems <- summary(lme4::lmer(chosen_candidate ~ yearnum + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="Black Democrat",]))$coefficients[2,1]
se_blackdems <- summary(lme4::lmer(chosen_candidate ~ yearnum + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="Black Democrat",]))$coefficients[2,2]
beta_whitereps <- summary(lme4::lmer(chosen_candidate ~ yearnum + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="White Republican",]))$coefficients[2,1]
se_whitereps <- summary(lme4::lmer(chosen_candidate ~ yearnum + (1|pub), weights = weight2, figdat[paste(figdat$resprace, figdat$respparty)=="White Republican",]))$coefficients[2,2]
z.test.white.by.party <- (beta_whitedems - beta_whitereps) / sqrt(se_whitedems^2 + se_whitereps^2)
pval.white.by.party <- 2 * pnorm(z.test.white.by.party, lower.tail = FALSE)
z.test.dem.by.race <- (beta_whitedems - beta_blackdems) / sqrt(se_whitedems^2 + se_blackdems^2)
pval.dem.by.race <- 2 * pnorm(z.test.dem.by.race, lower.tail = FALSE)
# the slope on white Democrats is significantly different from the slopes for both white Republicans and Black Democrats.
# t-test for statistical significance in final model for white dems
p_value <- 2*pt(q=2.07, df=14407, lower.tail=FALSE)
read.csv("/Users/annamikkelborg/Documents/GitHub/APSA-2022/candidates_study1.csv") %>%
filter(race=="Black") %>%
mutate(chosen_candidate = as.numeric(won)) %>%
dplyr::select(chosen_candidate, rr_index, disc_black, policy_payreps) %>%
pivot_longer(c(disc_black, rr_index, policy_payreps), names_to = "outcome", values_to = "value") %>%
mutate(outcome = case_when(outcome=="disc_black"~"Perceived anti-Black discrimination",
outcome=="policy_payreps"~"Support for reparations",
T~"Racial resentment"),
outcome = factor(outcome, levels = c("Perceived anti-Black discrimination", "Racial resentment", "Support for reparations"), ordered=T)) %>%
group_by(outcome, value) %>%
mutate(groupavg = mean(chosen_candidate, na.rm = T),
n = sum(!is.na(chosen_candidate))) %>%
ungroup() %>%
ggplot( aes(x = value, y = chosen_candidate)) +
geom_hline(yintercept = 0.5, linetype = 'dashed', color = 'darkgrey') +
geom_smooth(method = "lm", color = "black") +
geom_point(aes(x = value, y = groupavg, size = n), shape = 1, stat ="unique") +
theme_bw() +
ylim(c(0,1)) +
theme(text = element_text(family = "serif"),
panel.grid = element_blank(),
legend.title = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
legend.position = "none") +
ylab("Proportion selecting Black candidate") +
xlab("") +
facet_wrap(~outcome, strip.position = "bottom")
dat_ideo1 <- read_csvy("/Users/annamikkelborg/Documents/GitHub/candidate_ideology_conjoint/dat_candidatelevel_scrubbed.csv", stringsAsFactors = TRUE) %>%
filter(!ideo%in%c(1,2)) %>% # remove participants who are more conservative than any of the candidates on offer
rowwise() %>%
mutate(real_ideo_distance = ideo - candselfplacement_numfull, # positive values -> R more liberal than candidate
abs_ideo_distance = abs(real_ideo_distance)) %>%
ungroup() %>%
group_by(X) %>%
mutate(temp = sum(abs_ideo_distance, na.rm = F),
temp2 = sum(candselfplacement_numfull)) %>%
ungroup() %>%
rowwise() %>%
mutate(other_ideo_distance = temp - abs_ideo_distance,
other_candselfplacement_numfull = temp2 - candselfplacement_numfull,
rel_ideo_distance = abs_ideo_distance - other_ideo_distance,
real_ideo_distance_cands = candselfplacement_numfull - other_candselfplacement_numfull) %>%
ungroup() %>%
mutate(real_ideo_distance = rescale(real_ideo_distance, to = c(-1,1)),
abs_ideo_distance = rescale(abs_ideo_distance, to = c(0,1)),
rel_ideo_distance = rescale(rel_ideo_distance, to = c(1,-1)),
real_ideo_distance_cands = rescale(real_ideo_distance_cands, to = c(-1,1)),
rel_ideo_incongruence = rescale(abs_ideo_distance, to = c(1,0)),
strength_dem = case_when(pid==7~1,
pid==6~0.5,
pid==5~0,
T~NA_real_)) %>%
dplyr::select(chosen_candidate, rel_ideo_distance, abs_ideo_distance, race, X) %>%
mutate(rel_ideo_distance = round(rel_ideo_distance, 2))
dat_ideo2 <- read.csv("/Users/annamikkelborg/Documents/GitHub/omnibus/whitedems_candidates.csv") %>%
filter(liberal>0.3) %>%
mutate(candideo_num = case_when(candideo=="Very liberal"~1,
candideo=="Liberal"~5/6,
candideo=="Somewhat liberal"~2/3,
candideo=="Moderate"~0.5,
candideo=="Somewhat conservative"~1/3,
T~NA_real_)) %>%
rowwise() %>%
mutate(real_ideo_distance = liberal - candideo_num,
abs_ideo_distance = abs(real_ideo_distance)) %>%
ungroup() %>%
group_by(ResponseId) %>%
mutate(temp = sum(abs_ideo_distance, na.rm = F),
temp2 = sum(candideo_num)) %>%
ungroup() %>%
rowwise() %>%
mutate(other_ideo_distance = temp - abs_ideo_distance,
other_candideo_num = temp2 - candideo_num,
rel_ideo_distance = abs_ideo_distance - other_ideo_distance,
real_ideo_distance_cands = candideo_num - other_candideo_num) %>%
ungroup() %>%
mutate(real_ideo_distance = rescale(real_ideo_distance, to = c(-1,1)),
abs_ideo_distance = rescale(abs_ideo_distance, to = c(0,1)),
rel_ideo_distance = rescale(rel_ideo_distance, to = c(1,-1)),
real_ideo_distance_cands = rescale(real_ideo_distance_cands, to = c(-1,1)),
rel_ideo_incongruence = rescale(abs_ideo_distance, to = c(1,0)),
race = candrace,
X = ResponseId) %>%
dplyr::select(chosen_candidate, rel_ideo_distance, abs_ideo_distance, race, X)
dat_ideo <- rbind(dat_ideo1, dat_ideo2) %>%
mutate(rel_ideo_distance = round(rel_ideo_distance, 2))
mod1 <- tidy(lm(chosen_candidate ~ factor(rel_ideo_distance) + 0, dat_ideo[dat_ideo$race=="Black",]), conf.int = T) %>% filter(grepl("ideo", term)) %>% mutate(model = "Black", term = gsub("factor\\(rel_ideo_distance\\)", "", term), term = as.numeric(term))
mod2 <- tidy(lm(chosen_candidate ~ factor(rel_ideo_distance) + 0, dat_ideo[dat_ideo$race=="White",]), conf.int = T) %>% filter(grepl("ideo", term)) %>% mutate(model = "White", term = gsub("factor\\(rel_ideo_distance\\)", "", term), term = as.numeric(term))
mods <- rbind(mod1, mod2) %>%
arrange(desc(term)) %>%
ungroup()
ymax <- mods %>%
group_by(term) %>%
summarize(y.position = max(conf.high) + 0.05)
modsp <- dat_ideo %>%
filter(!is.na(rel_ideo_distance)) %>%
group_by(rel_ideo_distance) %>%
do(estimate = summary(lm(chosen_candidate ~ factor(race, ordered=F), data = .))$coefficients[2,1],
std.error = summary(lm(chosen_candidate ~ factor(race, ordered=F), data = .))$coefficients[2,2]) %>%
rowwise() %>%
mutate(estimate = as.numeric(estimate),
std.error = as.numeric(std.error),
upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
z = estimate/std.error,
p = exp(-0.717*z - 0.416*z^2)) %>%
ungroup() %>%
mutate(group1 = "White",
group2 = "Black",
diff = round(estimate, 3),
plab = case_when(p < 0.001 ~ " < 0.001",
T~paste(" = ", round(p, 3), sep = "")),
p.signif = case_when(p < 0.001 ~ "***",
p < 0.01 ~ "**",
p < 0.05 ~ "*",
T~ NA_character_),
term = rel_ideo_distance,
xmin = term - 0.03,
xmax = term + 0.03) %>%
full_join(ymax)
ggplot(mods, aes(x = term, y = estimate))+
geom_hline(yintercept = 0.5, linetype = "dashed", color = "darkgrey") +
geom_vline(xintercept = 0, linetype = "dashed", color = "darkgrey") +
geom_point(aes(color = model), position = position_dodge(.1)) +
scale_color_manual(values = c("black", "darkgrey")) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high, color = model), width = 0, position = position_dodge(.1)) +
theme_bw() +
theme(text = element_text(family = "serif"),
axis.ticks.x = element_blank(),
panel.grid = element_blank(),
legend.position = "none") +
ylab("Proportion selecting candidate") +
xlab("") +
scale_y_continuous(limits = c(-0.105, 1.22), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_continuous(limits = c(-1.05, 1.05), breaks = c(-0.67, 0, 0.67), labels = c("Other candidate\nmore congruent", "Candidates equally\ncongruent", "This candidate\nmore congruent")) +
geom_text(aes(y = 1.15, x = -1, label = "Black candidates"), hjust = 0, color = "black", family = "serif", check_overlap = T) +
geom_text(aes(y = 1.05, x = -1, label = "White candidates"), hjust = 0, color = "darkgrey", family = "serif", check_overlap = T) +
stat_pvalue_manual(modsp, label = "p.signif", family = "serif", size = 3)
reparations1 <- read.csv("/Users/annamikkelborg/Documents/GitHub/APSA-2022/candidates_study1.csv") %>%
mutate(placement = rescale(placement, to = c(1,0)),
chosen_candidate = won) %>%
dplyr::select(race, chosen_candidate, X, reparations, policy_payreps) %>% mutate() %>%
mutate(sample = 1, X = paste(X, sample), candselfplacement = NA_character_, treat = NA_character_, canddistance = NA_real_, realdirdiff = NA_real_)
colnames(reparations1)
reparations2 <-
csvy::read_csvy("/Users/annamikkelborg/Documents/GitHub/candidate_ideology_conjoint/dat_candidatelevel_scrubbed.csv", stringsAsFactors = TRUE)
table(reparations2$treat)
reparations1 <- read.csv("/Users/annamikkelborg/Documents/GitHub/APSA-2022/candidates_study1.csv") %>%
mutate(placement = rescale(placement, to = c(1,0)),
chosen_candidate = won,
sample = 1,
X = paste(X, sample),
candselfplacement = NA_character_,
canddistance = NA_real_,
realdirdiff = NA_real_) %>%
dplyr::select(race, chosen_candidate, X, reparations, policy_payreps, X, candselfplacement, canddistance, realdirdiff)
reparations2 <-
csvy::read_csvy("/Users/annamikkelborg/Documents/GitHub/candidate_ideology_conjoint/dat_candidatelevel_scrubbed.csv", stringsAsFactors = TRUE) %>%
filter(pid %in% c(5, 6, 7)&treat=="Policy") %>%
mutate(
sample = 2,
X = paste(X, sample),
placement = NA_real_) %>%
rename(policy_payreps = policy_reparations) %>%
dplyr::select(race, chosen_candidate, X, reparations, policy_payreps, sample, candselfplacement, canddistance, realdirdiff)
ncol(reparations1)
ncol(reparations2)
reparations1 <- read.csv("/Users/annamikkelborg/Documents/GitHub/APSA-2022/candidates_study1.csv") %>%
mutate(placement = rescale(placement, to = c(1,0)),
chosen_candidate = won,
sample = 1,
X = paste(X, sample),
candselfplacement = NA_character_,
canddistance = NA_real_,
realdirdiff = NA_real_) %>%
dplyr::select(race, chosen_candidate, X, reparations, policy_payreps, sample, candselfplacement, canddistance, realdirdiff)
ncol(reparations1)
reparations <- rbind(candidates1_temp, candidates2_temp) %>%
group_by(X) %>%
mutate(temp = temp = sum(canddistance, na.rm = F),
reparations1 <- read.csv("/Users/annamikkelborg/Documents/GitHub/APSA-2022/candidates_study1.csv") %>%
mutate(placement = rescale(placement, to = c(1,0)),
chosen_candidate = won,
sample = 1,
X = paste(X, sample),
candselfplacement = NA_character_,
canddistance = NA_real_,
realdirdiff = NA_real_) %>%
dplyr::select(race, chosen_candidate, X, reparations, policy_payreps, sample, candselfplacement, canddistance, realdirdiff)
reparations2 <-
csvy::read_csvy("/Users/annamikkelborg/Documents/GitHub/candidate_ideology_conjoint/dat_candidatelevel_scrubbed.csv", stringsAsFactors = TRUE) %>%
filter(pid %in% c(5, 6, 7)&treat=="Policy") %>%
mutate(
sample = 2,
X = paste(X, sample),
placement = NA_real_) %>%
rename(policy_payreps = policy_reparations) %>%
dplyr::select(race, chosen_candidate, X, reparations, policy_payreps, sample, candselfplacement, canddistance, realdirdiff)
reparations <- rbind(reparations1, reparations2) %>%
group_by(X) %>%
mutate(temp = sum(canddistance, na.rm = F),
temp2 = sum(realdirdiff, na.rm = F)) %>%
rowwise() %>%
mutate(other_canddistance = temp - canddistance,
other_realdirdiff = temp2 - realdirdiff) %>%
ungroup() %>%
mutate(canddistance_folded = round(abs(canddistance - 0.5) * 2, 5),
other_canddistance_folded = round(abs(other_canddistance - 0.5) * 2, 5),
realdirdiff_folded = round(abs(realdirdiff - 0.5) * 2, 5),
other_realdirdiff_folded = round(abs(other_realdirdiff - 0.5) * 2, 5)) %>%
rowwise() %>%
mutate(diffdistance = canddistance - other_canddistance,
diffdistance_folded = canddistance_folded - other_canddistance_folded,
diffistance_real = realdirdiff - other_realdirdiff,
diffdistance_real_folded = realdirdiff_folded - other_realdirdiff_folded) %>%
ungroup() %>%
dplyr::select(-temp) %>%
mutate(diffdistance_real_folded = rescale(diffdistance_real_folded, to = c(1, -1)),
diffdistance_folded = round(rescale(diffdistance_folded, to = c(1, -1)), 2),
job = factor(job),
experience = factor(experience),
endorsement = factor(endorsement),
healthcare = factor(healthcare),
climate = factor(climate),
reparations = factor(reparations),
race = factor(race),
candselfplacement = factor(candselfplacement),
candage = factor(candage)) %>%
group_by(X) %>%
mutate(nrow = row_number(),
opponent_reparations = case_when(nrow==1~lead(reparations),T~lag(reparations)),
black_stance = ifelse(race=="Black", tolower(as.character(reparations)), NA_character_),
white_stance = ifelse(race=="White", tolower(as.character(reparations)), NA_character_)) %>%
fill(black_stance, .direction = "updown") %>%
fill(white_stance, .direction = "updown") %>%
ungroup() %>%
mutate(stances = case_when(white_stance==black_stance~paste("Both candidates", black_stance, sep = " "),
race=="Black"~paste("This candidate ", black_stance, "s\nopponent ", white_stance, "s", sep = ""),
race=="White"~paste("This candidate ", white_stance, "s\nopponent ", black_stance, "s", sep = "")),
stances = factor(stances, levels=c("This candidate opposes\nopponent supports", "This candidate supports\nopponent opposes", "Both candidates oppose", "Both candidates support"), ordered=T),
policy_payreps = case_when(policy_payreps==0.5~1,T~policy_payreps),
policy_payreps = case_when(policy_payreps==0~"Respondent opposes reparations",
policy_payreps==1~"Respondent supports reparations\nor doesn't know")) %>%
dplyr::select(policy_payreps, race, stances, chosen_candidate)
reparations <- rbind(reparations1, reparations2) %>%
group_by(X) %>%
mutate(temp = sum(canddistance, na.rm = F),
temp2 = sum(realdirdiff, na.rm = F)) %>%
rowwise() %>%
mutate(other_canddistance = temp - canddistance,
other_realdirdiff = temp2 - realdirdiff) %>%
ungroup() %>%
mutate(canddistance_folded = round(abs(canddistance - 0.5) * 2, 5),
other_canddistance_folded = round(abs(other_canddistance - 0.5) * 2, 5),
realdirdiff_folded = round(abs(realdirdiff - 0.5) * 2, 5),
other_realdirdiff_folded = round(abs(other_realdirdiff - 0.5) * 2, 5)) %>%
rowwise() %>%
mutate(diffdistance = canddistance - other_canddistance,
diffdistance_folded = canddistance_folded - other_canddistance_folded,
diffistance_real = realdirdiff - other_realdirdiff,
diffdistance_real_folded = realdirdiff_folded - other_realdirdiff_folded) %>%
ungroup() %>%
dplyr::select(-temp) %>%
mutate(reparations = factor(reparations),
race = factor(race)) %>%
group_by(X) %>%
mutate(nrow = row_number(),
opponent_reparations = case_when(nrow==1~lead(reparations),T~lag(reparations)),
black_stance = ifelse(race=="Black", tolower(as.character(reparations)), NA_character_),
white_stance = ifelse(race=="White", tolower(as.character(reparations)), NA_character_)) %>%
fill(black_stance, .direction = "updown") %>%
fill(white_stance, .direction = "updown") %>%
ungroup() %>%
mutate(stances = case_when(white_stance==black_stance~paste("Both candidates", black_stance, sep = " "),
race=="Black"~paste("This candidate ", black_stance, "s\nopponent ", white_stance, "s", sep = ""),
race=="White"~paste("This candidate ", white_stance, "s\nopponent ", black_stance, "s", sep = "")),
stances = factor(stances, levels=c("This candidate opposes\nopponent supports", "This candidate supports\nopponent opposes", "Both candidates oppose", "Both candidates support"), ordered=T),
policy_payreps = case_when(policy_payreps==0.5~1,T~policy_payreps),
policy_payreps = case_when(policy_payreps==0~"Respondent opposes reparations",
policy_payreps==1~"Respondent supports reparations\nor doesn't know")) %>%
dplyr::select(policy_payreps, race, stances, chosen_candidate)
View(reparations)
reparations <- rbind(reparations1, reparations2) %>%
group_by(X) %>%
mutate(temp = sum(canddistance, na.rm = F),
temp2 = sum(realdirdiff, na.rm = F)) %>%
rowwise() %>%
mutate(other_canddistance = temp - canddistance,
other_realdirdiff = temp2 - realdirdiff) %>%
ungroup() %>%
mutate(canddistance_folded = round(abs(canddistance - 0.5) * 2, 5),
other_canddistance_folded = round(abs(other_canddistance - 0.5) * 2, 5),
realdirdiff_folded = round(abs(realdirdiff - 0.5) * 2, 5),
other_realdirdiff_folded = round(abs(other_realdirdiff - 0.5) * 2, 5)) %>%
rowwise() %>%
mutate(diffdistance = canddistance - other_canddistance,
diffdistance_folded = canddistance_folded - other_canddistance_folded,
diffistance_real = realdirdiff - other_realdirdiff,
diffdistance_real_folded = realdirdiff_folded - other_realdirdiff_folded) %>%
ungroup() %>%
dplyr::select(-temp) %>%
mutate(reparations = factor(reparations),
race = factor(race)) %>%
group_by(X) %>%
mutate(nrow = row_number(),
opponent_reparations = case_when(nrow==1~lead(reparations),T~lag(reparations)),
black_stance = ifelse(race=="Black", tolower(as.character(reparations)), NA_character_),
white_stance = ifelse(race=="White", tolower(as.character(reparations)), NA_character_)) %>%
fill(black_stance, .direction = "updown") %>%
fill(white_stance, .direction = "updown") %>%
ungroup() %>%
mutate(stances = case_when(white_stance==black_stance~paste("Both candidates", black_stance, sep = " "),
race=="Black"~paste("This candidate ", black_stance, "s\nopponent ", white_stance, "s", sep = ""),
race=="White"~paste("This candidate ", white_stance, "s\nopponent ", black_stance, "s", sep = "")),
stances = factor(stances, levels=c("This candidate opposes\nopponent supports", "This candidate supports\nopponent opposes", "Both candidates oppose", "Both candidates support"), ordered=T),
policy_payreps = case_when(policy_payreps==0.5~1,T~policy_payreps),
policy_payreps = case_when(policy_payreps==0~"Respondent opposes reparations",
policy_payreps==1~"Respondent supports reparations\nor doesn't know"),
policy_payreps = factor(policy_payreps, levels = c("Respondent supports reparations\nor doesn't know", "Respondent opposes reparations"), ordered=T)) %>%
dplyr::select(policy_payreps, race, stances, chosen_candidate)
reparations <- rbind(reparations1, reparations2) %>%
group_by(X) %>%
mutate(temp = sum(canddistance, na.rm = F),
temp2 = sum(realdirdiff, na.rm = F)) %>%
rowwise() %>%
mutate(other_canddistance = temp - canddistance,
other_realdirdiff = temp2 - realdirdiff) %>%
ungroup() %>%
mutate(canddistance_folded = round(abs(canddistance - 0.5) * 2, 5),
other_canddistance_folded = round(abs(other_canddistance - 0.5) * 2, 5),
realdirdiff_folded = round(abs(realdirdiff - 0.5) * 2, 5),
other_realdirdiff_folded = round(abs(other_realdirdiff - 0.5) * 2, 5)) %>%
rowwise() %>%
mutate(diffdistance = canddistance - other_canddistance,
diffdistance_folded = canddistance_folded - other_canddistance_folded,
diffistance_real = realdirdiff - other_realdirdiff,
diffdistance_real_folded = realdirdiff_folded - other_realdirdiff_folded) %>%
ungroup() %>%
dplyr::select(-temp) %>%
mutate(reparations = factor(reparations),
race = factor(race)) %>%
group_by(X) %>%
mutate(nrow = row_number(),
opponent_reparations = case_when(nrow==1~lead(reparations),T~lag(reparations)),
black_stance = ifelse(race=="Black", tolower(as.character(reparations)), NA_character_),
white_stance = ifelse(race=="White", tolower(as.character(reparations)), NA_character_)) %>%
fill(black_stance, .direction = "updown") %>%
fill(white_stance, .direction = "updown") %>%
ungroup() %>%
mutate(stances = case_when(white_stance==black_stance~paste("Both candidates", black_stance, sep = " "),
race=="Black"~paste("This candidate ", black_stance, "s\nopponent ", white_stance, "s", sep = ""),
race=="White"~paste("This candidate ", white_stance, "s\nopponent ", black_stance, "s", sep = "")),
stances = factor(stances, levels=c("This candidate opposes\nopponent supports", "This candidate supports\nopponent opposes", "Both candidates oppose", "Both candidates support"), ordered=T),
policy_payreps = case_when(policy_payreps==0.5~1,T~policy_payreps),
policy_payreps = case_when(policy_payreps==0~"Respondent opposes reparations",
policy_payreps==1~"Respondent supports reparations\nor doesn't know"),
policy_payreps = factor(policy_payreps, levels = c("Respondent supports reparations\nor doesn't know", "Respondent opposes reparations"), ordered=T),
race = factor(race, levels = c("White", "Black"), ordered = T)) %>%
dplyr::select(policy_payreps, race, stances, chosen_candidate)
repstemp2 <- reparations %>%
group_by(policy_payreps, race, stances) %>%
mutate(estimate = mean(chosen_candidate, na.rm = T),
sd = sd(chosen_candidate, na.rm = T),
n = n()) %>%
dplyr::select(-chosen_candidate) %>%
distinct() %>%
rowwise() %>%
mutate(std.error = sd / sqrt(n),
lower = estimate - 1.96 * std.error,
upper = estimate + 1.96 * std.error)
ymax <- repstemp2 %>%
group_by(stances, policy_payreps) %>%
summarize(y.position = max(upper) + 0.05)
repstemp3 <- reparations %>%
group_by(policy_payreps, stances) %>%
do(estimate = summary(lm(chosen_candidate ~ factor(race, ordered=F), data = .))$coefficients[2,1],
std.error = summary(lm(chosen_candidate ~ factor(race, ordered=F), data = .))$coefficients[2,2]) %>%
rowwise() %>%
mutate(estimate = as.numeric(estimate),
std.error = as.numeric(std.error),
upper = estimate + 1.96 * std.error,
lower = estimate - 1.96 * std.error,
z = estimate/std.error,
p = exp(-0.717*z - 0.416*z^2)) %>%
ungroup() %>%
mutate(group1 = "White",
group2 = "Black",
diff = round(estimate, 3),
plab = case_when(p < 0.001 ~ " < 0.001",
p < 0.01 ~ " < 0.01",
p < 0.05 ~ " < 0.05",
T~paste(" = ", round(p, 3), sep = "")),
p.signif = case_when(p < 0.001 ~ "***",
p < 0.01 ~ "**",
p < 0.05 ~ "*",
T~ NA_character_)) %>%
full_join(ymax)
ggplot(repstemp2, aes(x = race, y = estimate, color = race)) +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "darkgrey") +
geom_point(position = position_dodge(.5)) +
geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(.5), width = 0) +
theme_bw() +
scale_color_manual(values = c("black", "darkgrey")) +
theme(legend.position = "none",
text = element_text(family = "serif"),
axis.ticks.x = element_blank(),
panel.grid = element_blank(),
strip.background = element_rect(fill = "white"),
strip.text = element_text(family = "serif"),
axis.text.x = element_blank()) +
facet_grid(policy_payreps~stances) +
xlab("Candidate race") +
ylab("Proportion selecting candidate") +
stat_pvalue_manual(repstemp3, label = "p.signif", family = "serif", size = 3) +
ylim(c(0.1, 0.95)) +
xlab("") +
geom_text(data=data.frame(stances = factor(c("This candidate opposes\nopponent supports")), policy_payreps = factor(c("Respondent supports reparations\nor doesn't know"))), y = 0.9, x = 0.5, race = "Black", label = "Black candidates", hjust = 0, color = "black", size = 3, family = "serif", check_overlap = T) +
geom_text(data=data.frame(stances = factor(c("This candidate opposes\nopponent supports")), policy_payreps = factor(c("Respondent supports reparations\nor doesn't know"))), y = 0.85, x = 0.5, label = "White candidates", hjust = 0, color = "darkgrey", size = 3, family = "serif", check_overlap = T)
wow <- repstemp %>% filter(race=="Black"&stances%in%c("This candidate supports\nopponent opposes", "Both candidates oppose"))
wow <- reparations %>% filter(race=="Black"&stances%in%c("This candidate supports\nopponent opposes", "Both candidates oppose"))
summary(lm(chosen_candidate ~ factor(stances, ordered=F), wow))
